{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/service.js","hooks/http.hook.js","resources/img/load.gif","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/errorBoundary/ErrorBoundary.js","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/pages/404.js","components/pages/SingleComicPage.js","resources/img/x-men.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","Link","to","NavLink","end","style","_ref","color","isActive","_ref2","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_callee2","id","_context2","getComic","_ref3","_callee3","_context3","_transformComics","_x2","getAllComics","_ref4","_callee4","_args4","_context4","comics","_comics$textObjects$","pageCount","title","description","price","prices","thumbnail","path","extension","homepage","urls","language","textObjects","character","slice","name","wiki","items","Spinner","src","heart","margin","background","display","ErrorMessage","width","height","View","person","imgStyle","alt","href","RandomChar","setPerson","_useMarvelService","useEffect","updateChar","onCharLoaded","console","log","Math","floor","random","then","errorMess","spinn","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharacterSelected","onKeyDown","e","key","renderItems","disabled","Skeleton","_Fragment","char","CharInfo","setChar","characterId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","this","setState","Component","MainPage","selectedCharacter","setCharacter","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","renderComics","ComicsPage","Page404","comic","navigate","useNavigate","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","App","Router","Routes","Route","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.573a22dd.chunk.js","sourcesContent":["import './appHeader.scss';\nimport {Link, NavLink} from \"react-router-dom\";\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                        end        \n                        style={({isActive}) => ({color: isActive ? 'blue' : 'inherit'})} \n                        to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink  \n                        style={({isActive}) => ({color: isActive ? 'blue' : 'inherit'})} \n                        to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n// https://stackblitz.com/github/remix-run/react-router/tree/main/examples/basic?file=src%2FApp.tsx\nexport default AppHeader;\n\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useHttp} from '../hooks/http.hook'\n\n\nconst useMarvelService=()=> {\n\n    const {loading,request,error,clearError}=useHttp();\n\n\n    const _apiBase='https://gateway.marvel.com:443/v1/public/';\n    const _apiKey='apikey=ee08e659fe8dbd136caf78ed92338ca2'    \n    const _baseOffset='291';\n\n    \n        // getResource = async (url) => {\n        //     let res = await fetch(url);\n        \n        //     if (!res.ok) {\n        //         throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        //     }  \n        \n        //     return await res.json();\n        // }\n\n\n        // request  вместо getResource \n        const getAllCharacters=async (offset=_baseOffset)=>{\n            const res=await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n            return res.data.results.map(_transformCharacter);\n        }\n        // getCharacter=(id)=>{\n        //     return this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        // }\n        const getCharacter= async (id)=>{\n            const res=await request(`${_apiBase}characters/${id}?${_apiKey}`);\n            return _transformCharacter(res.data.results[0]);\n        }\n\n\n        \n        const getComic = async (id) => {\n            const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n            return _transformComics(res.data.results[0]);\n        };\n\n        const getAllComics=async (offset='33')=>{\n            const res=await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n            return res.data.results.map(_transformComics);\n        }\n\n        const _transformComics=(comics)=>{\n            return {\n                pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No info about number of pages',\n                id: comics.id,\n                title: comics.title,\n                description: comics.description || 'Theres no description',\n                price: comics.prices[0].price ? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n                thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n                homepage: comics.urls[0].url,\n                language: comics.textObjects[0]?.language || \"en-us\",\n            }\n        }\n\n        // const getCharacterApi=()=>{\n        //     return request('https://gateway.marvel.com:443/v1/public/characters?limit=9&offset=291&apikey=ee08e659fe8dbd136caf78ed92338ca2')\n        // }\n\n        const _transformCharacter=(character)=>{\n            \n            if(character.description===''){\n                character.description='This person has no description';\n            }\n            if(character.description.length>200){\n                character.description=character.description.slice(0,220)+'...';\n            }\n            return {\n                id: character.id,\n                name:character.name,\n                description: character.description,\n                thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\n                homepage: character.urls[0].url,\n                wiki: character.urls[1].url,\n                comics: character.comics.items           \n            }     \n        }\n\n        return {\n            loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic\n        }\n}\n\n// export {postData};\n// export {getResource}\n\nexport default useMarvelService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp=()=>{\r\n    const [loading, setLoading]=useState(false);\r\n    const [error,setError]=useState(null);\r\n\r\n    const request = useCallback(async (url,\r\n        method='GET',\r\n        body=null, \r\n        headers={'Content-Type': 'application/json'})=>{\r\n            setLoading(true);\r\n\r\n            try{\r\n                const response=await fetch(url, {method, body, headers});\r\n                if (!response.ok) {\r\n                    throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n                }\r\n\r\n                const data=await response.json();\r\n                setLoading(false);\r\n                return data;\r\n\r\n            } catch(e){\r\n                setLoading(false);\r\n                setError(e.message);\r\n                throw e;\r\n            }\r\n\r\n        },[]);\r\n\r\n        const clearError=useCallback(()=>{\r\n            setError(null)\r\n        },[]);\r\n        return { loading, request, error,clearError} \r\n\r\n}","export default __webpack_public_path__ + \"static/media/load.65c3f468.gif\";","import heart from '../../resources/img/load.gif';\n\nconst Spinner=()=>{\n    return(\n        <div className=\"spinner\">\n            <img src={heart} style={{margin: '0 auto', background: 'none', display: 'block'}}/>\n        </div>\n        // <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n        //     <g transform=\"translate(80,50)\">\n        //     <g transform=\"rotate(0)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n        //     <g transform=\"rotate(45)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(50,80)\">\n        //     <g transform=\"rotate(90)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n        //     <g transform=\"rotate(135)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(20,50.00000000000001)\">\n        //     <g transform=\"rotate(180)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n        //     <g transform=\"rotate(225)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(49.99999999999999,20)\">\n        //     <g transform=\"rotate(270)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n        //     <g transform=\"rotate(315)\">\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n        //     </circle>\n        //     </g>\n        //     </g>\n        // </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\n\nconst ErrorMessage=()=>{\n    return(\n        <img src={error} style={ {display: 'block', width: '250px', height:'250px', margin: '0 auto'} } />\n    )\n} \n// from public\n\nexport default ErrorMessage;","import {Component, useEffect, useState} from 'react';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport useMarvelService from '../../services/service';\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\n\nconst RandomChar =()=> {\n   \n\n    const [person,setPerson]=useState({}); // null\n    // const [loading,setLoading]=useState(true);\n    // const [error,setError]=useState(false); // не нужно уже\n    // const marvelService=new MarvelService();\n\n    const {loading,error,getCharacter, clearError}=useMarvelService();\n\n    useEffect(()=>{\n        updateChar();\n        // const timerId=setInterval(updateChar,5000);\n\n        // return \n        //     clearInterval(timerId);\n        \n    },[])\n\n    const onCharLoaded=(person)=>{\n        console.log('update');\n        setPerson(person);\n        // setLoading(false);\n    }\n\n    // const onCharLoading=()=>{\n    //     setLoading(true);\n    // }\n\n    // const onError=()=>{\n    //     setLoading(false);\n    //     setError(true);     \n    // }\n\n    const updateChar=()=>{\n        clearError();\n        const id=Math.floor(Math.random()*(1011400-1011000)+1011000);\n        // onCharLoading();\n        // marvelService\n        getCharacter(id)\n            .then(onCharLoaded)\n\n            // .catch(onError)\n            // .then(res=>{\n            //     this.setState(res)\n            // })\n    }\n\n\n\n        const errorMess=error ? <ErrorMessage/> : null;\n        const spinn=loading ? <Spinner/> : null;\n        const content=!(loading || error) ? <View person={person}/> : null;\n\n        // {loading ? <Spinner/> : <View person={person}/>}\n        return (\n            <div className=\"randomchar\">\n               {errorMess}\n               {spinn}\n               {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    \n}\n\nconst View=({person})=>{\n    let imgStyle={ \n        'objectFit': 'cover'\n    };\n    const {name,description, thumbnail,homepage,wiki}=person;\n    if(thumbnail==='http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        imgStyle={ \n            'objectFit': 'contain' }\n    }\n    return(     \n                <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                           {description}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n    )\n}\n\n\nexport default RandomChar;","import './charList.scss';\nimport useMarvelService from '../../services/service';\nimport { useState,useEffect,useRef } from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport PropTypes from 'prop-types'\n\n\nconst CharList =(props)=>{\n   \n\n     \n    const [charList, setCharList]=useState([]);\n    const [newItemLoading,setNewItemLoading]=useState(false);\n    const [offset,setOffset]=useState(200);\n    const [charEnded,setCharEnded]=useState(false);\n\n    const {loading, error, getAllCharacters}=useMarvelService();\n\n    const marvelService= useMarvelService();\n\n    // useffect запуск после рендера, после того как функция onRequest существует внутри комп-та\n    useEffect(()=>  {\n        onRequest(offset,true);\n    },[])\n\n//////    \n    const onRequest=(offset,initial)=>{\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n    // отвеч за запрос на сервер\n    \n    const onCharListLoaded=(newCharList)=>{\n\n        // const {logger, secondLog}=await import ('./someFunc');\n        // logger();\n\n        let ended=false;\n        if(newCharList.length<9) {\n            ended=true;\n        }\n\n        console.log('update');\n        setCharList(charList=> [...charList, ...newCharList]); // важно что было в предыд charList\n        setNewItemLoading(newItemLoading=> false)\n        setOffset(offset=> offset+9)\n        setCharEnded(charEnded=>ended)\n    } \n    // ({}) - возвр-ем объект из этой функции\n///////\n\n    console.log('CharList!');\n    const itemRefs=useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item,i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el=> itemRefs.current[i]=el}\n                    key={item.id}\n                    onClick={()=>{props.onCharacterSelected(item.id); focusOnItem(i); }}\n                    onKeyDown={(e)=>{\n                        if(e.key===' ' || e.key==='Enter'){\n                            props.onCharacterSelected(item.id);\n                            focusOnItem(i);\n                        }\n                      \n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        return(\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }   \n\n        const items=renderItems(charList);\n\n        const errorMess=error ? <ErrorMessage/> : null;\n        const spinn=loading && !newItemLoading ? <Spinner/> : null;\n        // const content=!(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMess}\n                {spinn}\n                {items}\n                <button \n                onClick={()=>onRequest(offset)}\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block' }}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    \n   \n}\n\nCharList.propTypes={\n    onCharacterSelected: PropTypes.string\n}\n\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport {useState,useEffect } from 'react';\nimport useMarvelService from '../../services/service';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport PropTypes from 'prop-types'\n\n\nconst CharInfo=(props)=>{\n\n    const [char,setChar]=useState(null);\n    // const [loading,setLoading]=useState(false);\n    // const [error,setError]=useState(false);\n\n    const {loading, error, getCharacter, clearError}=useMarvelService();\n\n\n    useEffect(()=>{\n        updateChar()\n    },[props.characterId])\n    // componentDidCatch(error,info){\n    //     console.log(error, info);\n    //     this.setState({\n    //         error: true\n    //     });\n    // }\n\n    const updateChar=()=>{\n        \n        const {characterId}=props;\n            if(!characterId){\n                return;\n            }\n            clearError();\n            getCharacter(characterId)\n                .then(onCharLoaded)    \n        // this.foo.bar=0;          \n    }\n\n    const onCharLoaded=(char)=>{\n        console.log('update');\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMess=error ? <ErrorMessage/> : null;\n    const spinn=loading ? <Spinner/> : null;\n    const content=!( loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n        {skeleton}\n        {errorMess}\n        {spinn}\n        {content}\n        </div>\n    )\n   \n}\n\n\nconst View=({char})=>{\n    const {name,description,thumbnail,homepage,wiki,comics}=char;\n    // if(comics.length>11){\n    //     comics.slice(comics.length-9, comics.length);\n    // }\n    if(comics.length===null){\n        \n    }\n\n    let imgStyle={ \n        'objectFit': 'contain'\n    }\n    if(thumbnail==='http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n            imgStyle={ \n            'objectFit': 'contain' }\n    }\n\n\n    return (\n        <>\n        <div className=\"char__basics\">\n            <img src={thumbnail} alt={name} style={imgStyle}/>\n            <div>\n                <div className=\"char__info-name\">{name}</div>\n                <div className=\"char__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div className=\"char__descr\">\n            {description}   \n        </div>\n        <div className=\"char__comics\">Comics:</div>\n        <ul className=\"char__comics-list\">\n            {comics.length> 0 ? null :               \n                            <li className=\"char__comics-item\" >\n                                 Sorry. There is no comics with this character. U can create it :|\n                            </li> \n                          \n            }\n            \n            {   \n                comics.map((item, i)=>{\n                    if(i>4) return;\n                    return(                     \n                            <li key={i} className=\"char__comics-item\" >\n                                 {item.name}\n                            </li> \n                        )  \n                    })\n            }  \n        </ul>\n        </>\n    )\n}\n\n\n// CharInfo.propTypes={\n//     characterId: PropTypes.func.isRequired\n// }\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    state={\r\n        error: false\r\n    }\r\n\r\n    // static getDerivedStateFromError(error){\r\n    //     return {\r\n    //         error: true\r\n    //     } \r\n    // }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        this.setState({\r\n            error: true\r\n        })\r\n        console.log(errorInfo)\r\n    }\r\n\r\n    render(){\r\n        if(this.state.error){\r\n            return <h2>Somth went wrong </h2>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport decoration from '../../resources/img/vision.png';\r\nimport { useState } from \"react\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\n// switch чтоб не повторять то что в Route\r\n\r\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\nconst MainPage=()=>{\r\n\r\n    const[selectedCharacter, setCharacter]=useState(null);\r\n\r\n    const onCharacterSelected=(id)=>{\r\n       setCharacter(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <RandomChar/>\r\n        <div className=\"char__content\">\r\n            <CharList onCharacterSelected={onCharacterSelected}/>\r\n            <ErrorBoundary>\r\n                <CharInfo characterId={selectedCharacter}/>\r\n            </ErrorBoundary> \r\n        </div>\r\n        <img className =\"bg-decoration\" src={decoration} alt=\"vision\"/>    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage; ","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import './comicsList.scss';\n\nimport {useState, useEffect} from 'react';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/service';\nimport { Link } from 'react-router-dom';\n\n\nconst ComicsList = () => {\n\n    const [comicsList,setComicsList]=useState([]);\n    const [offset, setOffset] = useState(55);\n    const [newItemLoading,setNewItemLoading]=useState(false);\n    const [comicsEnded,setComicsEnded]=useState(false);\n\n\n    const {loading, error, getAllComics}=useMarvelService();\n\n    useEffect(()=>  {\n        onRequest(offset);\n    },[]);\n    \n//////    \n\n    const onRequest=(offset,initial)=>{\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(res=> console.log(res))\n    }\n\n    const onComicsListLoaded=(newComicsList)=>{\n        let ended=false;\n        if(newComicsList.length<8) {\n            ended=true;\n        }\n\n        // console.log('update');\n        setComicsList(comicsList=> [...comicsList, ...newComicsList]); // важно что было в предыд charList\n        setNewItemLoading(false)\n        setOffset(offset=>offset+4)\n        setComicsEnded(ended)\n    } \n\n    function renderComics(arr){\n        const items=arr.map((item,i)=>{\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            return(\n                <li className=\"comics__item\"\n                    tabIndex={0}\n                    key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} style={imgStyle} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )   \n    });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n        const items=renderComics(comicsList);\n\n        const errorMess=error ? <ErrorMessage/> : null;\n        const spinn=loading && !newItemLoading ? <Spinner/> : null;\n        return(\n            <div className=\"comics__list\">\n                {errorMess}\n                {spinn}\n                {items}\n\n                <button className=\"button button__main button__long\"\n                    // disabled={setNewItemLoading}\n                    onClick={()=> onRequest(offset)}\n                    style={{'display': comicsEnded ? 'none' : 'block'}}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )    \n}\n\nexport default ComicsList;","\r\nimport AppBanner from \"../../components/appBanner/AppBanner\"\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\n\r\n\r\nconst ComicsPage=()=>{\r\n\r\n    return(\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import ErrorMessage from \"../errorMessage/ErrorMessage\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nconst Page404=()=>{\r\n    return(\r\n        <div>\r\n            <ErrorMessage/>\r\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page doesnt exist </p>\r\n            <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px' }}\r\n                to=\"/\">\r\n                Back to main page\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import './singleComicPage.scss';\r\nimport xMen from '../../resources/img/x-men.png';\r\nimport {useParams, Link, useNavigate} from \"react-router-dom\";\r\nimport {useState,useEffect } from 'react';\r\nimport useMarvelService from '../../services/service';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicId}=useParams();\r\n    const [comic,setComic]=useState(null);\r\n    const {loading,request,error,getComic, clearError}=useMarvelService();\r\n    \r\n\r\n    useEffect(()=>{\r\n        updateComic();\r\n    },[comicId])\r\n\r\n    const updateComic=()=>{\r\n            clearError();\r\n            getComic(comicId)\r\n                .then(onComicLoaded)  \r\n    }\r\n\r\n    const onComicLoaded=(comic)=>{\r\n        console.log('updateComic');\r\n        setComic(comic);\r\n    }\r\n    \r\n    const errorMess=error ? <ErrorMessage/> : null;\r\n    const spinn=loading ? <Spinner/> : null;\r\n    const content=!( loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            {errorMess}\r\n            {spinn}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View=({comic})=>{\r\n    const {title, description, pageCount, language, thumbnail,price}=comic;\r\n    const navigate=useNavigate();\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">{language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n            <button onClick={() => navigate(-1)}>Go back</button>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","export default __webpack_public_path__ + \"static/media/x-men.41b39e19.png\";","\nimport AppHeader from \"../appHeader/AppHeader\";\n// import RandomChar from \"../randomChar/RandomChar\";\n// import CharList from \"../charList/CharList\";\n// import CharInfo from \"../charInfo/CharInfo\";\n// import AppBanner from \"../../components/appBanner/AppBanner\"\n// import decoration from '../../resources/img/vision.png';\n// import { useState } from \"react\";\n// import ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n// import ComicsList from '../comicsList/ComicsList';\n\n// switch чтоб не повторять то что в Route\n\nimport { BrowserRouter as Router, Route, Switch,Routes} from \"react-router-dom\";\nimport MainPage from \"../pages/MainPage\";\nimport ComicsPage from \"../pages/ComicsPage\";\nimport Page404 from \"../pages/404\";\nimport SingleComicPage from \"../pages/SingleComicPage\";\nimport {lazy} from 'react';\n\n\nconst App=()=> {\n\n    \n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes> \n                        <Route path=\"/\" element={<MainPage/>}/>                           \n                        <Route path=\"/comics\" element={<ComicsPage/>}/>\n                        <Route path=\"/comics/:comicId\" element={<SingleComicPage/>} />\n                        <Route path=\"*\" element={<Page404/>} />\n                    </Routes>\n                </main>       \n            </div>\n        </Router>\n    )\n}\n\n// https://reactrouter.com/en/6.12.0/components/outlet\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport useMarvelService from './services/service';\nimport './style/style.scss';\n\n\n// const marvelService0=useMarvelService();\n//marvelService0.getAllCharacters().then(res=> console.log(res));\n//marvelService0.getCharacter(1011208).then(res=> console.log(res))\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}